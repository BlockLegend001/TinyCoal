plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
    id "me.modmuss50.mod-publish-plugin" version "0.7.4"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        url "https://maven.shedaniel.me"
    }
}

fabricApi {
    configureDataGeneration {
        client = true
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {

    }
}

publishMods {
    displayName = "$project.archives_base_name-$mod_version-Fabric"
    version = mod_version
    type = STABLE

    def changelogFile = file('CHANGELOG.md')
    changelog = changelogFile.exists() ? changelogFile.text : 'CHANGELOG.md not found'

    modLoaders.add('fabric')
    file = remapJar.archiveFile

    curseforge {
        projectId = '1201889'
        accessToken = providers.environmentVariable('CURSEFORGE_TOKEN')
        minecraftVersions.add(minecraft_version)
        clientRequired = true
        serverRequired = true
        requires("fabric-api")
    }
    modrinth {
        projectId = 'Y5bC6Ftg'
        accessToken = providers.environmentVariable('MODRINTH_TOKEN')
        minecraftVersions.add(minecraft_version)
        requires("fabric-api")
    }
}